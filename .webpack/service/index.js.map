{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./db.js","webpack:///./index.js","webpack:///./queries.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"aws-sdk\"","webpack:///external \"body-parser\"","webpack:///external \"express\"","webpack:///external \"pify\"","webpack:///external \"serverless-http\"","webpack:///external \"source-map-support/register\""],"names":["AWS","IS_OFFLINE","process","env","dynamoDb","DynamoDB","region","endpoint","getVersions","params","scan","promise","result","Error","Items","versions","map","i","version","parseInt","N","timestamp","sort","x","y","getVersionCount","describeTable","data","Table","ItemCount","getVersion","versionId","getItem","console","log","Item","versionData","S","creationDate","putVersion","putItem","serverless","bodyParser","express","pify","app","use","json","strict","get","req","res","send","status","e","post","JSON","stringify","body","Date","getTime","newVersionData","handler","CANVAS_VERSIONS_TABLE","get_AllVersions","TableName","AttributesToGet","get_Version","Key","toString","get_VersionCount","put_Version"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import { get_AllVersions, get_Version, get_VersionCount, put_Version, CANVAS_VERSIONS_TABLE } from './queries'\n\nconst AWS = require('aws-sdk');\n// Initialize DB\nconst IS_OFFLINE = process.env.IS_OFFLINE;\nlet dynamoDb;\nif (IS_OFFLINE === 'true') {\n  dynamoDb = new AWS.DynamoDB({\n    region: 'localhost',\n    endpoint: 'http://localhost:8070'\n  })\n} else {\n  dynamoDb = new AWS.DynamoDB();\n};\n\n\n// Expose operations\nexport const getVersions = async () => {\n  const params = get_AllVersions()\n  let result\n\n  try {\n    result = await dynamoDb.scan(params).promise()\n  } catch (e) {\n    throw new Error('Could not get versions')\n    return\n  }\n\n  if (!result.Items) {\n    throw new Error('Could not get versions')\n    return\n  }\n\n  const versions = result.Items.map(i => {\n    return {\n      version: parseInt(i.version.N),\n      timestamp: parseInt(i.timestamp.N)\n    }\n  }).sort((x, y) => {\n    return x.version < y.version ? -1 : 1\n  })\n\n  return { versions }\n}\n\nexport const getVersionCount = async () => {\n  const params = get_VersionCount()\n  let data\n\n  try {\n    data = await dynamoDb.describeTable(params).promise()\n  } catch (e) {\n    throw new Error('Count not get version count')\n    return\n  }\n\n  return data.Table.ItemCount\n}\n\nexport const getVersion = async (versionId) => {\n  const params = get_Version(versionId)\n  let result\n\n  try {\n    result = await dynamoDb.getItem(params).promise()\n  } catch (e) {\n    console.log('getVersion error: ', e)\n    throw new Error('Could not get version')\n    return\n  }\n\n  if (!result.Item || !result.Item.data) {\n    throw new Error('Version data is not complete: ', result)\n    return\n  }\n\n  return {\n    versionData: result.Item.data.S,\n    version: result.Item.version.N,\n    creationDate: result.Item.timestamp.N\n  }  \n}\n\nexport const putVersion = async (versionId, versionData, timestamp) => {\n  const params = put_Version(versionId, versionData, timestamp)\n  let result\n\n  try {\n    result = await dynamoDb.putItem(params).promise()\n  } catch (e) {\n    console.log('Caught error in putVersion: ', e)\n    throw new Error('Could not put version')\n    return\n  }\n\n  return {\n    version: versionId,\n    creationDate: timestamp\n  }\n}\n","const serverless = require('serverless-http');\nconst bodyParser = require('body-parser');\nconst express = require('express')\nconst pify = require('pify')\nconst app = express()\nimport { getVersions, getVersion, getVersionCount, putVersion } from './db'\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get('/', function (req, res) {\n  res.send('Hello World!')\n})\n\n// Get all site versions\napp.get('/versions', async (req, res) => {\n  let versions\n  try {\n    versions = await getVersions()\n  } catch (e) {\n    res.status(400).json({ e })\n    return\n  }\n  res.json(versions)\n})\n\napp.get('/version/latest', async (req, res) => {\n  let version, versionId\n\n  try {\n    versionId = await getVersionCount()\n  } catch (e) {\n    console.log('Error getting versionId: ', e)\n    res.status(400).json({})\n    return\n  }\n\n  try {\n    version = await getVersion(versionId - 1)\n  } catch (e) {\n    console.log('Failed to get latest version: ', versionId - 1, e)\n    res.status(400).json({})\n    return    \n  }\n  res.json(version)\n})\n\n// Get a certain site version\napp.get('/version/:versionId', async (req, res) => {\n  let version\n\n  try {\n    version = await getVersion(req.params.versionId)\n  } catch (e) {\n    res.status(400).json({})\n    return    \n  }\n  res.json(version)\n})\n\n// Post new site version\napp.post('/new', async (req, res) => {\n  const versionData = JSON.stringify(req.body.versionData);\n  const timestamp = new Date().getTime()\n  let versionId, newVersionData\n\n  try {\n    versionId = await getVersionCount()    \n  } catch (e) {\n    console.log('Error getting versionId: ', e)\n    res.status(400).json({})\n    return\n  }\n\n  console.log('Version ID is: ', versionId)\n\n  try {\n    newVersionData = await putVersion(versionId, versionData, timestamp)\n  } catch (e) {\n    res.status(400).json({})\n    return\n  }\n\n  res.json(newVersionData)\n})\n\nexport const handler = serverless(app);","export const CANVAS_VERSIONS_TABLE = process.env.CANVAS_VERSIONS_TABLE;\n\nexport const get_AllVersions = () => {\n  return {\n    TableName: CANVAS_VERSIONS_TABLE,\n    AttributesToGet: ['version', 'timestamp']\n  }\n}\n\nexport const get_Version = (versionId) => {\n  return {\n    TableName: CANVAS_VERSIONS_TABLE,\n    Key: { version: { N: versionId.toString() } },\n    AttributesToGet: ['version', 'data', 'timestamp']\n  }\n}\n\nexport const get_VersionCount = () => {\n  return {\n    TableName: CANVAS_VERSIONS_TABLE\n  }\n}\n\nexport const put_Version = (versionId, versionData, timestamp) => {\n  return {\n    TableName: CANVAS_VERSIONS_TABLE,\n    Item: {\n      version: { N: versionId.toString() },\n      data: { S: versionData },\n      timestamp: { N: timestamp.toString() }\n    }\n  }\n}","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"body-parser\");","module.exports = require(\"express\");","module.exports = require(\"pify\");","module.exports = require(\"serverless-http\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}